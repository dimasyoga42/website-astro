---
import Layout from '../layouts/Layout.astro';
import * as AstroFeather from 'astro-feather';
const { titles } = Astro.props
export const prerender = true;
import { slide } from "astro:transitions";
import { ViewTransitions } from "astro:transitions";
---
<Layout>
  		<ViewTransitions />
  <nav class="w-full h-14 md:h-16 bg-transparent backdrop-blur flex justify-between transition ease-in">
    <button id="themeToggle" class="flex justify-items-center items-center ml-2">
  <svg width="25px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path class="sun" fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
    <path class="moon" fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
  </svg>
</button>
    <span class="font-bold flex justify-items-center items-center ml-2" transition:animate={slide({ duration: '2s' })}>{titles}</span>
    <div class="flex justify-items-center items-center mr-5 transition-all md:hidden">
      <button id="btn">
        <div id="menu" class="">
          <AstroFeather.MenuIcon />
        </div>
        <div id="x" class="hidden">
          <AstroFeather.XIcon />
        </div>
        </button>
    </div>
    <div class="justify-items-center items-center mr-5 hidden md:flex">
      <ul class="flex gap-4 font-semibold">
        <li class=""><a href="/">home</a></li>
       <li class=""><a href="/Blog">Blog</a></li>
        <li class=""><a href="/">Portfolio</a></li>
         <li class=""><a href="/">Contact</a></li>
      </ul>
    </div>
  </nav>
  <div id="bg-menu" class="w-[50%] min-h-[100vh] backdrop-blur-sm fixed z-50 ml-[100%] transition ease-in flex justify-center justify-items-center items-center">
    <ul>
      <li class="sub-menu"><a href="/">home</a></li>
       <li class="sub-menu"><a href="/Blog">Blog</a></li>
        <li class="sub-menu"><a href="/">Portfolio</a></li>
         <li class="sub-menu"><a href="/">Contact</a></li>
    </ul>
  </div>
  
</Layout>
<style>
  #bg-menu {
  transition: margin-left 0.3s ease-in-out;
}
.sub-menu {
  margin: 50% 0;
  font-size: 20px;
}
  #themeToggle {
    border: 0;
    background: none;
  }
  .sun { fill: black; }
  .moon { fill: transparent; }

  :global(.dark) .sun { fill: transparent; }
  :global(.dark) .moon { fill: white; }
</style>
<script>
  const btn = document.getElementById('btn');
  const btns = document.getElementById('btn-dark');
  const menu = document.getElementById('menu');
  const x = document.getElementById('x');
  const bgMenu = document.getElementById('bg-menu');
  btn.addEventListener('click', () => {
    menu.classList.toggle('hidden');
    x.classList.toggle('hidden');
    if (bgMenu.classList.contains('ml-[100%]')) {
      bgMenu.classList.remove('ml-[100%]');
      bgMenu.classList.add('ml-[50%]');
    } else {
      bgMenu.classList.remove('ml-[50%]');
      bgMenu.classList.add('ml-[100%]');
      menuIcon.classList.remove('hidden');
    }
  });
    const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
      return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  document.getElementById("themeToggle").addEventListener("click", handleToggleClick);

  
</script>